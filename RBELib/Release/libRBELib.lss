In archive libRBELib.a:

SetServo.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000048  2**0
                  ALLOC
  3 .text.initAltCom 00000038  00000000  00000000  00000048  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCharDebug 00000010  00000000  00000000  00000080  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.coPrintf 0000001a  00000000  00000000  00000090  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.setServo 00000084  00000000  00000000  000000aa  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.initAltCom:

00000000 <initAltCom>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	84 e0       	ldi	r24, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	8a 95       	dec	r24
  10:	01 f4       	brne	.+0      	; 0x12 <initAltCom+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <initAltCom>
  1e:	21 50       	subi	r18, 0x01	; 1
  20:	30 40       	sbci	r19, 0x00	; 0
  22:	30 93 c5 00 	sts	0x00C5, r19
  26:	20 93 c4 00 	sts	0x00C4, r18
  2a:	88 e1       	ldi	r24, 0x18	; 24
  2c:	80 93 c1 00 	sts	0x00C1, r24
  30:	86 e0       	ldi	r24, 0x06	; 6
  32:	80 93 c2 00 	sts	0x00C2, r24
  36:	08 95       	ret

Disassembly of section .text.setCharDebug:

00000000 <setCharDebug>:
   0:	98 2f       	mov	r25, r24
   2:	80 91 c0 00 	lds	r24, 0x00C0
   6:	85 ff       	sbrs	r24, 5
   8:	00 c0       	rjmp	.+0      	; 0xa <setCharDebug+0xa>
   a:	90 93 c6 00 	sts	0x00C6, r25
   e:	08 95       	ret

Disassembly of section .text.coPrintf:

00000000 <coPrintf>:
   0:	fc 01       	movw	r30, r24
   2:	00 c0       	rjmp	.+0      	; 0x4 <coPrintf+0x4>
   4:	80 91 c0 00 	lds	r24, 0x00C0
   8:	85 ff       	sbrs	r24, 5
   a:	00 c0       	rjmp	.+0      	; 0xc <coPrintf+0xc>
   c:	90 93 c6 00 	sts	0x00C6, r25
  10:	31 96       	adiw	r30, 0x01	; 1
  12:	90 81       	ld	r25, Z
  14:	99 23       	and	r25, r25
  16:	01 f4       	brne	.+0      	; 0x18 <coPrintf+0x18>
  18:	08 95       	ret

Disassembly of section .text.setServo:

00000000 <setServo>:
   0:	0f 93       	push	r16
   2:	1f 93       	push	r17
   4:	df 93       	push	r29
   6:	cf 93       	push	r28
   8:	cd b7       	in	r28, 0x3d	; 61
   a:	de b7       	in	r29, 0x3e	; 62
   c:	64 97       	sbiw	r28, 0x14	; 20
   e:	0f b6       	in	r0, 0x3f	; 63
  10:	f8 94       	cli
  12:	de bf       	out	0x3e, r29	; 62
  14:	0f be       	out	0x3f, r0	; 63
  16:	cd bf       	out	0x3d, r28	; 61
  18:	2d b7       	in	r18, 0x3d	; 61
  1a:	3e b7       	in	r19, 0x3e	; 62
  1c:	28 50       	subi	r18, 0x08	; 8
  1e:	30 40       	sbci	r19, 0x00	; 0
  20:	0f b6       	in	r0, 0x3f	; 63
  22:	f8 94       	cli
  24:	3e bf       	out	0x3e, r19	; 62
  26:	0f be       	out	0x3f, r0	; 63
  28:	2d bf       	out	0x3d, r18	; 61
  2a:	ed b7       	in	r30, 0x3d	; 61
  2c:	fe b7       	in	r31, 0x3e	; 62
  2e:	31 96       	adiw	r30, 0x01	; 1
  30:	8e 01       	movw	r16, r28
  32:	0f 5f       	subi	r16, 0xFF	; 255
  34:	1f 4f       	sbci	r17, 0xFF	; 255
  36:	ad b7       	in	r26, 0x3d	; 61
  38:	be b7       	in	r27, 0x3e	; 62
  3a:	12 96       	adiw	r26, 0x02	; 2
  3c:	1c 93       	st	X, r17
  3e:	0e 93       	st	-X, r16
  40:	11 97       	sbiw	r26, 0x01	; 1
  42:	20 e0       	ldi	r18, 0x00	; 0
  44:	30 e0       	ldi	r19, 0x00	; 0
  46:	33 83       	std	Z+3, r19	; 0x03
  48:	22 83       	std	Z+2, r18	; 0x02
  4a:	95 83       	std	Z+5, r25	; 0x05
  4c:	84 83       	std	Z+4, r24	; 0x04
  4e:	77 83       	std	Z+7, r23	; 0x07
  50:	66 83       	std	Z+6, r22	; 0x06
  52:	0e 94 00 00 	call	0	; 0x0 <setServo>
  56:	2d b7       	in	r18, 0x3d	; 61
  58:	3e b7       	in	r19, 0x3e	; 62
  5a:	28 5f       	subi	r18, 0xF8	; 248
  5c:	3f 4f       	sbci	r19, 0xFF	; 255
  5e:	0f b6       	in	r0, 0x3f	; 63
  60:	f8 94       	cli
  62:	3e bf       	out	0x3e, r19	; 62
  64:	0f be       	out	0x3f, r0	; 63
  66:	2d bf       	out	0x3d, r18	; 61
  68:	c8 01       	movw	r24, r16
  6a:	0e 94 00 00 	call	0	; 0x0 <setServo>
  6e:	64 96       	adiw	r28, 0x14	; 20
  70:	0f b6       	in	r0, 0x3f	; 63
  72:	f8 94       	cli
  74:	de bf       	out	0x3e, r29	; 62
  76:	0f be       	out	0x3f, r0	; 63
  78:	cd bf       	out	0x3d, r28	; 61
  7a:	cf 91       	pop	r28
  7c:	df 91       	pop	r29
  7e:	1f 91       	pop	r17
  80:	0f 91       	pop	r16
  82:	08 95       	ret

ADC.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.getADCValue 0000000c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .text.changeADC 000000d4  00000000  00000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.getADC  00000022  00000000  00000000  00000114  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.clearADC 0000001c  00000000  00000000  00000136  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  7 .text.initADC 0000002c  00000000  00000000  00000152  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.getADCValue:

00000000 <getADCValue>:
   0:	20 91 78 00 	lds	r18, 0x0078
   4:	30 91 79 00 	lds	r19, 0x0079
   8:	c9 01       	movw	r24, r18
   a:	08 95       	ret

Disassembly of section .text.changeADC:

00000000 <changeADC>:
   0:	83 30       	cpi	r24, 0x03	; 3
   2:	91 05       	cpc	r25, r1
   4:	01 f0       	breq	.+0      	; 0x6 <changeADC+0x6>
   6:	84 30       	cpi	r24, 0x04	; 4
   8:	91 05       	cpc	r25, r1
   a:	04 f4       	brge	.+0      	; 0xc <changeADC+0xc>
   c:	81 30       	cpi	r24, 0x01	; 1
   e:	91 05       	cpc	r25, r1
  10:	01 f0       	breq	.+0      	; 0x12 <changeADC+0x12>
  12:	82 30       	cpi	r24, 0x02	; 2
  14:	91 05       	cpc	r25, r1
  16:	04 f4       	brge	.+0      	; 0x18 <changeADC+0x18>
  18:	89 2b       	or	r24, r25
  1a:	01 f0       	breq	.+0      	; 0x1c <changeADC+0x1c>
  1c:	00 c0       	rjmp	.+0      	; 0x1e <changeADC+0x1e>
  1e:	85 30       	cpi	r24, 0x05	; 5
  20:	91 05       	cpc	r25, r1
  22:	01 f0       	breq	.+0      	; 0x24 <changeADC+0x24>
  24:	85 30       	cpi	r24, 0x05	; 5
  26:	91 05       	cpc	r25, r1
  28:	04 f0       	brlt	.+0      	; 0x2a <changeADC+0x2a>
  2a:	86 30       	cpi	r24, 0x06	; 6
  2c:	91 05       	cpc	r25, r1
  2e:	01 f0       	breq	.+0      	; 0x30 <changeADC+0x30>
  30:	07 97       	sbiw	r24, 0x07	; 7
  32:	01 f0       	breq	.+0      	; 0x34 <changeADC+0x34>
  34:	00 c0       	rjmp	.+0      	; 0x36 <changeADC+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <changeADC+0x38>
  38:	80 91 7c 00 	lds	r24, 0x007C
  3c:	80 7e       	andi	r24, 0xE0	; 224
  3e:	00 c0       	rjmp	.+0      	; 0x40 <changeADC+0x40>
  40:	80 91 7c 00 	lds	r24, 0x007C
  44:	80 7e       	andi	r24, 0xE0	; 224
  46:	80 93 7c 00 	sts	0x007C, r24
  4a:	80 91 7c 00 	lds	r24, 0x007C
  4e:	81 60       	ori	r24, 0x01	; 1
  50:	00 c0       	rjmp	.+0      	; 0x52 <changeADC+0x52>
  52:	80 91 7c 00 	lds	r24, 0x007C
  56:	80 7e       	andi	r24, 0xE0	; 224
  58:	80 93 7c 00 	sts	0x007C, r24
  5c:	80 91 7c 00 	lds	r24, 0x007C
  60:	82 60       	ori	r24, 0x02	; 2
  62:	00 c0       	rjmp	.+0      	; 0x64 <changeADC+0x64>
  64:	80 91 7c 00 	lds	r24, 0x007C
  68:	80 7e       	andi	r24, 0xE0	; 224
  6a:	80 93 7c 00 	sts	0x007C, r24
  6e:	80 91 7c 00 	lds	r24, 0x007C
  72:	83 60       	ori	r24, 0x03	; 3
  74:	00 c0       	rjmp	.+0      	; 0x76 <changeADC+0x76>
  76:	80 91 7c 00 	lds	r24, 0x007C
  7a:	80 7e       	andi	r24, 0xE0	; 224
  7c:	80 93 7c 00 	sts	0x007C, r24
  80:	80 91 7c 00 	lds	r24, 0x007C
  84:	84 60       	ori	r24, 0x04	; 4
  86:	00 c0       	rjmp	.+0      	; 0x88 <changeADC+0x88>
  88:	80 91 7c 00 	lds	r24, 0x007C
  8c:	80 7e       	andi	r24, 0xE0	; 224
  8e:	80 93 7c 00 	sts	0x007C, r24
  92:	80 91 7c 00 	lds	r24, 0x007C
  96:	85 60       	ori	r24, 0x05	; 5
  98:	00 c0       	rjmp	.+0      	; 0x9a <changeADC+0x9a>
  9a:	80 91 7c 00 	lds	r24, 0x007C
  9e:	80 7e       	andi	r24, 0xE0	; 224
  a0:	80 93 7c 00 	sts	0x007C, r24
  a4:	80 91 7c 00 	lds	r24, 0x007C
  a8:	86 60       	ori	r24, 0x06	; 6
  aa:	00 c0       	rjmp	.+0      	; 0xac <changeADC+0xac>
  ac:	80 91 7c 00 	lds	r24, 0x007C
  b0:	80 7e       	andi	r24, 0xE0	; 224
  b2:	80 93 7c 00 	sts	0x007C, r24
  b6:	80 91 7c 00 	lds	r24, 0x007C
  ba:	87 60       	ori	r24, 0x07	; 7
  bc:	00 c0       	rjmp	.+0      	; 0xbe <changeADC+0xbe>
  be:	80 91 7c 00 	lds	r24, 0x007C
  c2:	80 7e       	andi	r24, 0xE0	; 224
  c4:	80 93 7c 00 	sts	0x007C, r24
  c8:	80 91 7c 00 	lds	r24, 0x007C
  cc:	8f 61       	ori	r24, 0x1F	; 31
  ce:	80 93 7c 00 	sts	0x007C, r24
  d2:	08 95       	ret

Disassembly of section .text.getADC:

00000000 <getADC>:
   0:	0e 94 00 00 	call	0	; 0x0 <getADC>
   4:	80 91 7a 00 	lds	r24, 0x007A
   8:	80 64       	ori	r24, 0x40	; 64
   a:	80 93 7a 00 	sts	0x007A, r24
   e:	80 91 7a 00 	lds	r24, 0x007A
  12:	84 ff       	sbrs	r24, 4
  14:	00 c0       	rjmp	.+0      	; 0x16 <getADC+0x16>
  16:	20 91 78 00 	lds	r18, 0x0078
  1a:	30 91 79 00 	lds	r19, 0x0079
  1e:	c9 01       	movw	r24, r18
  20:	08 95       	ret

Disassembly of section .text.clearADC:

00000000 <clearADC>:
   0:	ea e7       	ldi	r30, 0x7A	; 122
   2:	f0 e0       	ldi	r31, 0x00	; 0
   4:	80 81       	ld	r24, Z
   6:	8f 77       	andi	r24, 0x7F	; 127
   8:	80 83       	st	Z, r24
   a:	10 92 79 00 	sts	0x0079, r1
   e:	10 92 78 00 	sts	0x0078, r1
  12:	8f ef       	ldi	r24, 0xFF	; 255
  14:	9f ef       	ldi	r25, 0xFF	; 255
  16:	0e 94 00 00 	call	0	; 0x0 <clearADC>
  1a:	08 95       	ret

Disassembly of section .text.initADC:

00000000 <initADC>:
   0:	27 ea       	ldi	r18, 0xA7	; 167
   2:	20 93 7a 00 	sts	0x007A, r18
   6:	eb e7       	ldi	r30, 0x7B	; 123
   8:	f0 e0       	ldi	r31, 0x00	; 0
   a:	20 81       	ld	r18, Z
   c:	28 7f       	andi	r18, 0xF8	; 248
   e:	20 83       	st	Z, r18
  10:	20 81       	ld	r18, Z
  12:	26 2b       	or	r18, r22
  14:	20 83       	st	Z, r18
  16:	ec e7       	ldi	r30, 0x7C	; 124
  18:	f0 e0       	ldi	r31, 0x00	; 0
  1a:	20 81       	ld	r18, Z
  1c:	2f 73       	andi	r18, 0x3F	; 63
  1e:	20 83       	st	Z, r18
  20:	20 81       	ld	r18, Z
  22:	24 2b       	or	r18, r20
  24:	20 83       	st	Z, r18
  26:	0e 94 00 00 	call	0	; 0x0 <initADC>
  2a:	08 95       	ret

Debug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.initRBELib 0000001a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.printfRBE 0000000a  00000000  00000000  0000004e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .data.RBEOut  0000000e  00000000  00000000  00000058  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, DATA

Disassembly of section .text.initRBELib:

00000000 <initRBELib>:
   0:	80 e0       	ldi	r24, 0x00	; 0
   2:	90 e0       	ldi	r25, 0x00	; 0
   4:	90 93 00 00 	sts	0x0000, r25
   8:	80 93 00 00 	sts	0x0000, r24
   c:	60 e0       	ldi	r22, 0x00	; 0
   e:	72 ec       	ldi	r23, 0xC2	; 194
  10:	81 e0       	ldi	r24, 0x01	; 1
  12:	90 e0       	ldi	r25, 0x00	; 0
  14:	0e 94 00 00 	call	0	; 0x0 <initRBELib>
  18:	08 95       	ret

Disassembly of section .text.printfRBE:

00000000 <printfRBE>:
   0:	0e 94 00 00 	call	0	; 0x0 <printfRBE>
   4:	80 e0       	ldi	r24, 0x00	; 0
   6:	90 e0       	ldi	r25, 0x00	; 0
   8:	08 95       	ret

USARTDebug.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.getCharDebug 0000000e  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.putCharDebug 00000010  00000000  00000000  00000042  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.debugUSARTInit 0000004e  00000000  00000000  00000052  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.getCharDebug:

00000000 <getCharDebug>:
   0:	80 91 c8 00 	lds	r24, 0x00C8
   4:	87 ff       	sbrs	r24, 7
   6:	00 c0       	rjmp	.+0      	; 0x8 <getCharDebug+0x8>
   8:	80 91 ce 00 	lds	r24, 0x00CE
   c:	08 95       	ret

Disassembly of section .text.putCharDebug:

00000000 <putCharDebug>:
   0:	98 2f       	mov	r25, r24
   2:	80 91 c8 00 	lds	r24, 0x00C8
   6:	85 ff       	sbrs	r24, 5
   8:	00 c0       	rjmp	.+0      	; 0xa <putCharDebug+0xa>
   a:	90 93 ce 00 	sts	0x00CE, r25
   e:	08 95       	ret

Disassembly of section .text.debugUSARTInit:

00000000 <debugUSARTInit>:
   0:	9b 01       	movw	r18, r22
   2:	ac 01       	movw	r20, r24
   4:	64 e0       	ldi	r22, 0x04	; 4
   6:	22 0f       	add	r18, r18
   8:	33 1f       	adc	r19, r19
   a:	44 1f       	adc	r20, r20
   c:	55 1f       	adc	r21, r21
   e:	6a 95       	dec	r22
  10:	01 f4       	brne	.+0      	; 0x12 <debugUSARTInit+0x12>
  12:	60 e0       	ldi	r22, 0x00	; 0
  14:	70 e4       	ldi	r23, 0x40	; 64
  16:	89 e1       	ldi	r24, 0x19	; 25
  18:	91 e0       	ldi	r25, 0x01	; 1
  1a:	0e 94 00 00 	call	0	; 0x0 <debugUSARTInit>
  1e:	c9 01       	movw	r24, r18
  20:	da 01       	movw	r26, r20
  22:	01 97       	sbiw	r24, 0x01	; 1
  24:	a1 09       	sbc	r26, r1
  26:	b1 09       	sbc	r27, r1
  28:	29 2f       	mov	r18, r25
  2a:	3a 2f       	mov	r19, r26
  2c:	4b 2f       	mov	r20, r27
  2e:	55 27       	eor	r21, r21
  30:	01 96       	adiw	r24, 0x01	; 1
  32:	a1 1d       	adc	r26, r1
  34:	b1 1d       	adc	r27, r1
  36:	20 93 cd 00 	sts	0x00CD, r18
  3a:	81 50       	subi	r24, 0x01	; 1
  3c:	80 93 cc 00 	sts	0x00CC, r24
  40:	88 e1       	ldi	r24, 0x18	; 24
  42:	80 93 c9 00 	sts	0x00C9, r24
  46:	8e e0       	ldi	r24, 0x0E	; 14
  48:	80 93 ca 00 	sts	0x00CA, r24
  4c:	08 95       	ret

ports.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000034  2**0
                  ALLOC
  3 .text.getPinsVal 00000122  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setPinsVal 00000128  00000000  00000000  00000156  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.setPinsDir 00000128  00000000  00000000  0000027e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.getPinsVal:

00000000 <getPinsVal>:
   0:	1f 93       	push	r17
   2:	df 93       	push	r29
   4:	cf 93       	push	r28
   6:	cd b7       	in	r28, 0x3d	; 61
   8:	de b7       	in	r29, 0x3e	; 62
   a:	8e 81       	ldd	r24, Y+6	; 0x06
   c:	6f 81       	ldd	r22, Y+7	; 0x07
   e:	78 85       	ldd	r23, Y+8	; 0x08
  10:	de 01       	movw	r26, r28
  12:	19 96       	adiw	r26, 0x09	; 9
  14:	82 34       	cpi	r24, 0x42	; 66
  16:	01 f0       	breq	.+0      	; 0x18 <getPinsVal+0x18>
  18:	83 34       	cpi	r24, 0x43	; 67
  1a:	00 f4       	brcc	.+0      	; 0x1c <getPinsVal+0x1c>
  1c:	81 34       	cpi	r24, 0x41	; 65
  1e:	01 f4       	brne	.+0      	; 0x20 <getPinsVal+0x20>
  20:	00 c0       	rjmp	.+0      	; 0x22 <getPinsVal+0x22>
  22:	83 34       	cpi	r24, 0x43	; 67
  24:	01 f0       	breq	.+0      	; 0x26 <getPinsVal+0x26>
  26:	84 34       	cpi	r24, 0x44	; 68
  28:	01 f4       	brne	.+0      	; 0x2a <getPinsVal+0x2a>
  2a:	00 c0       	rjmp	.+0      	; 0x2c <getPinsVal+0x2c>
  2c:	e0 e2       	ldi	r30, 0x20	; 32
  2e:	f0 e0       	ldi	r31, 0x00	; 0
  30:	00 c0       	rjmp	.+0      	; 0x32 <getPinsVal+0x32>
  32:	e3 e2       	ldi	r30, 0x23	; 35
  34:	f0 e0       	ldi	r31, 0x00	; 0
  36:	00 c0       	rjmp	.+0      	; 0x38 <getPinsVal+0x38>
  38:	e6 e2       	ldi	r30, 0x26	; 38
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <getPinsVal+0x3e>
  3e:	e9 e2       	ldi	r30, 0x29	; 41
  40:	f0 e0       	ldi	r31, 0x00	; 0
  42:	20 e0       	ldi	r18, 0x00	; 0
  44:	30 e0       	ldi	r19, 0x00	; 0
  46:	40 e0       	ldi	r20, 0x00	; 0
  48:	50 e0       	ldi	r21, 0x00	; 0
  4a:	11 e0       	ldi	r17, 0x01	; 1
  4c:	00 c0       	rjmp	.+0      	; 0x4e <getPinsVal+0x4e>
  4e:	8d 91       	ld	r24, X+
  50:	9c 91       	ld	r25, X
  52:	11 97       	sbiw	r26, 0x01	; 1
  54:	83 30       	cpi	r24, 0x03	; 3
  56:	91 05       	cpc	r25, r1
  58:	01 f0       	breq	.+0      	; 0x5a <getPinsVal+0x5a>
  5a:	84 30       	cpi	r24, 0x04	; 4
  5c:	91 05       	cpc	r25, r1
  5e:	04 f4       	brge	.+0      	; 0x60 <getPinsVal+0x60>
  60:	81 30       	cpi	r24, 0x01	; 1
  62:	91 05       	cpc	r25, r1
  64:	01 f0       	breq	.+0      	; 0x66 <getPinsVal+0x66>
  66:	82 30       	cpi	r24, 0x02	; 2
  68:	91 05       	cpc	r25, r1
  6a:	04 f4       	brge	.+0      	; 0x6c <getPinsVal+0x6c>
  6c:	89 2b       	or	r24, r25
  6e:	01 f0       	breq	.+0      	; 0x70 <getPinsVal+0x70>
  70:	00 c0       	rjmp	.+0      	; 0x72 <getPinsVal+0x72>
  72:	85 30       	cpi	r24, 0x05	; 5
  74:	91 05       	cpc	r25, r1
  76:	01 f0       	breq	.+0      	; 0x78 <getPinsVal+0x78>
  78:	85 30       	cpi	r24, 0x05	; 5
  7a:	91 05       	cpc	r25, r1
  7c:	04 f0       	brlt	.+0      	; 0x7e <getPinsVal+0x7e>
  7e:	86 30       	cpi	r24, 0x06	; 6
  80:	91 05       	cpc	r25, r1
  82:	01 f0       	breq	.+0      	; 0x84 <getPinsVal+0x84>
  84:	07 97       	sbiw	r24, 0x07	; 7
  86:	01 f0       	breq	.+0      	; 0x88 <getPinsVal+0x88>
  88:	00 c0       	rjmp	.+0      	; 0x8a <getPinsVal+0x8a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <getPinsVal+0x8c>
  8c:	80 81       	ld	r24, Z
  8e:	81 27       	eor	r24, r17
  90:	90 e0       	ldi	r25, 0x00	; 0
  92:	81 70       	andi	r24, 0x01	; 1
  94:	90 70       	andi	r25, 0x00	; 0
  96:	00 c0       	rjmp	.+0      	; 0x98 <getPinsVal+0x98>
  98:	80 81       	ld	r24, Z
  9a:	81 fd       	sbrc	r24, 1
  9c:	00 c0       	rjmp	.+0      	; 0x9e <getPinsVal+0x9e>
  9e:	82 e0       	ldi	r24, 0x02	; 2
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <getPinsVal+0xa4>
  a4:	80 81       	ld	r24, Z
  a6:	82 fd       	sbrc	r24, 2
  a8:	00 c0       	rjmp	.+0      	; 0xaa <getPinsVal+0xaa>
  aa:	84 e0       	ldi	r24, 0x04	; 4
  ac:	90 e0       	ldi	r25, 0x00	; 0
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <getPinsVal+0xb0>
  b0:	80 81       	ld	r24, Z
  b2:	83 fd       	sbrc	r24, 3
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <getPinsVal+0xb6>
  b6:	88 e0       	ldi	r24, 0x08	; 8
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	00 c0       	rjmp	.+0      	; 0xbc <getPinsVal+0xbc>
  bc:	80 81       	ld	r24, Z
  be:	84 fd       	sbrc	r24, 4
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <getPinsVal+0xc2>
  c2:	80 e1       	ldi	r24, 0x10	; 16
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <getPinsVal+0xc8>
  c8:	80 81       	ld	r24, Z
  ca:	85 fd       	sbrc	r24, 5
  cc:	00 c0       	rjmp	.+0      	; 0xce <getPinsVal+0xce>
  ce:	80 e2       	ldi	r24, 0x20	; 32
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <getPinsVal+0xd4>
  d4:	80 81       	ld	r24, Z
  d6:	86 ff       	sbrs	r24, 6
  d8:	00 c0       	rjmp	.+0      	; 0xda <getPinsVal+0xda>
  da:	80 e0       	ldi	r24, 0x00	; 0
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	00 c0       	rjmp	.+0      	; 0xe0 <getPinsVal+0xe0>
  e0:	80 e4       	ldi	r24, 0x40	; 64
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <getPinsVal+0xe6>
  e6:	80 81       	ld	r24, Z
  e8:	88 23       	and	r24, r24
  ea:	99 27       	eor	r25, r25
  ec:	87 fd       	sbrc	r24, 7
  ee:	90 95       	com	r25
  f0:	80 95       	com	r24
  f2:	90 95       	com	r25
  f4:	88 27       	eor	r24, r24
  f6:	99 0f       	add	r25, r25
  f8:	88 1f       	adc	r24, r24
  fa:	99 27       	eor	r25, r25
  fc:	96 95       	lsr	r25
  fe:	98 2f       	mov	r25, r24
 100:	88 27       	eor	r24, r24
 102:	97 95       	ror	r25
 104:	87 95       	ror	r24
 106:	28 2b       	or	r18, r24
 108:	39 2b       	or	r19, r25
 10a:	12 96       	adiw	r26, 0x02	; 2
 10c:	4f 5f       	subi	r20, 0xFF	; 255
 10e:	5f 4f       	sbci	r21, 0xFF	; 255
 110:	46 17       	cp	r20, r22
 112:	57 07       	cpc	r21, r23
 114:	04 f4       	brge	.+0      	; 0x116 <getPinsVal+0x116>
 116:	00 c0       	rjmp	.+0      	; 0x118 <getPinsVal+0x118>
 118:	c9 01       	movw	r24, r18
 11a:	cf 91       	pop	r28
 11c:	df 91       	pop	r29
 11e:	1f 91       	pop	r17
 120:	08 95       	ret

Disassembly of section .text.setPinsVal:

00000000 <setPinsVal>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	df 93       	push	r29
   e:	cf 93       	push	r28
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	8b 85       	ldd	r24, Y+11	; 0x0b
  16:	9c 85       	ldd	r25, Y+12	; 0x0c
  18:	ce 84       	ldd	r12, Y+14	; 0x0e
  1a:	df 84       	ldd	r13, Y+15	; 0x0f
  1c:	de 01       	movw	r26, r28
  1e:	50 96       	adiw	r26, 0x10	; 16
  20:	82 34       	cpi	r24, 0x42	; 66
  22:	01 f0       	breq	.+0      	; 0x24 <setPinsVal+0x24>
  24:	83 34       	cpi	r24, 0x43	; 67
  26:	00 f4       	brcc	.+0      	; 0x28 <setPinsVal+0x28>
  28:	81 34       	cpi	r24, 0x41	; 65
  2a:	01 f4       	brne	.+0      	; 0x2c <setPinsVal+0x2c>
  2c:	00 c0       	rjmp	.+0      	; 0x2e <setPinsVal+0x2e>
  2e:	83 34       	cpi	r24, 0x43	; 67
  30:	01 f0       	breq	.+0      	; 0x32 <setPinsVal+0x32>
  32:	84 34       	cpi	r24, 0x44	; 68
  34:	01 f4       	brne	.+0      	; 0x36 <setPinsVal+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <setPinsVal+0x38>
  38:	e2 e2       	ldi	r30, 0x22	; 34
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <setPinsVal+0x3e>
  3e:	e5 e2       	ldi	r30, 0x25	; 37
  40:	f0 e0       	ldi	r31, 0x00	; 0
  42:	00 c0       	rjmp	.+0      	; 0x44 <setPinsVal+0x44>
  44:	e8 e2       	ldi	r30, 0x28	; 40
  46:	f0 e0       	ldi	r31, 0x00	; 0
  48:	00 c0       	rjmp	.+0      	; 0x4a <setPinsVal+0x4a>
  4a:	eb e2       	ldi	r30, 0x2B	; 43
  4c:	f0 e0       	ldi	r31, 0x00	; 0
  4e:	40 e0       	ldi	r20, 0x00	; 0
  50:	50 e0       	ldi	r21, 0x00	; 0
  52:	29 2f       	mov	r18, r25
  54:	21 70       	andi	r18, 0x01	; 1
  56:	e2 2e       	mov	r14, r18
  58:	ee 0c       	add	r14, r14
  5a:	ee 0c       	add	r14, r14
  5c:	ee 0c       	add	r14, r14
  5e:	f2 2e       	mov	r15, r18
  60:	f2 94       	swap	r15
  62:	ff 0c       	add	r15, r15
  64:	80 ee       	ldi	r24, 0xE0	; 224
  66:	f8 22       	and	r15, r24
  68:	02 2f       	mov	r16, r18
  6a:	02 95       	swap	r16
  6c:	00 7f       	andi	r16, 0xF0	; 240
  6e:	12 2f       	mov	r17, r18
  70:	12 95       	swap	r17
  72:	11 0f       	add	r17, r17
  74:	11 0f       	add	r17, r17
  76:	10 7c       	andi	r17, 0xC0	; 192
  78:	79 2f       	mov	r23, r25
  7a:	77 95       	ror	r23
  7c:	77 27       	eor	r23, r23
  7e:	77 95       	ror	r23
  80:	62 2f       	mov	r22, r18
  82:	66 0f       	add	r22, r22
  84:	32 2f       	mov	r19, r18
  86:	33 0f       	add	r19, r19
  88:	33 0f       	add	r19, r19
  8a:	00 c0       	rjmp	.+0      	; 0x8c <setPinsVal+0x8c>
  8c:	8d 91       	ld	r24, X+
  8e:	9c 91       	ld	r25, X
  90:	11 97       	sbiw	r26, 0x01	; 1
  92:	83 30       	cpi	r24, 0x03	; 3
  94:	91 05       	cpc	r25, r1
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsVal+0x98>
  98:	84 30       	cpi	r24, 0x04	; 4
  9a:	91 05       	cpc	r25, r1
  9c:	04 f4       	brge	.+0      	; 0x9e <setPinsVal+0x9e>
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	91 05       	cpc	r25, r1
  a2:	01 f0       	breq	.+0      	; 0xa4 <setPinsVal+0xa4>
  a4:	82 30       	cpi	r24, 0x02	; 2
  a6:	91 05       	cpc	r25, r1
  a8:	04 f4       	brge	.+0      	; 0xaa <setPinsVal+0xaa>
  aa:	89 2b       	or	r24, r25
  ac:	01 f0       	breq	.+0      	; 0xae <setPinsVal+0xae>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <setPinsVal+0xb0>
  b0:	85 30       	cpi	r24, 0x05	; 5
  b2:	91 05       	cpc	r25, r1
  b4:	01 f0       	breq	.+0      	; 0xb6 <setPinsVal+0xb6>
  b6:	85 30       	cpi	r24, 0x05	; 5
  b8:	91 05       	cpc	r25, r1
  ba:	04 f0       	brlt	.+0      	; 0xbc <setPinsVal+0xbc>
  bc:	86 30       	cpi	r24, 0x06	; 6
  be:	91 05       	cpc	r25, r1
  c0:	01 f0       	breq	.+0      	; 0xc2 <setPinsVal+0xc2>
  c2:	07 97       	sbiw	r24, 0x07	; 7
  c4:	01 f4       	brne	.+0      	; 0xc6 <setPinsVal+0xc6>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <setPinsVal+0xc8>
  c8:	80 81       	ld	r24, Z
  ca:	8e 7f       	andi	r24, 0xFE	; 254
  cc:	82 2b       	or	r24, r18
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <setPinsVal+0xd0>
  d0:	80 81       	ld	r24, Z
  d2:	8d 7f       	andi	r24, 0xFD	; 253
  d4:	86 2b       	or	r24, r22
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <setPinsVal+0xd8>
  d8:	80 81       	ld	r24, Z
  da:	8b 7f       	andi	r24, 0xFB	; 251
  dc:	83 2b       	or	r24, r19
  de:	00 c0       	rjmp	.+0      	; 0xe0 <setPinsVal+0xe0>
  e0:	80 81       	ld	r24, Z
  e2:	87 7f       	andi	r24, 0xF7	; 247
  e4:	8e 29       	or	r24, r14
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <setPinsVal+0xe8>
  e8:	80 81       	ld	r24, Z
  ea:	8f 7e       	andi	r24, 0xEF	; 239
  ec:	80 2b       	or	r24, r16
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <setPinsVal+0xf0>
  f0:	80 81       	ld	r24, Z
  f2:	8f 7d       	andi	r24, 0xDF	; 223
  f4:	8f 29       	or	r24, r15
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <setPinsVal+0xf8>
  f8:	80 81       	ld	r24, Z
  fa:	8f 7b       	andi	r24, 0xBF	; 191
  fc:	81 2b       	or	r24, r17
  fe:	00 c0       	rjmp	.+0      	; 0x100 <setPinsVal+0x100>
 100:	80 81       	ld	r24, Z
 102:	8f 77       	andi	r24, 0x7F	; 127
 104:	87 2b       	or	r24, r23
 106:	80 83       	st	Z, r24
 108:	12 96       	adiw	r26, 0x02	; 2
 10a:	4f 5f       	subi	r20, 0xFF	; 255
 10c:	5f 4f       	sbci	r21, 0xFF	; 255
 10e:	4c 15       	cp	r20, r12
 110:	5d 05       	cpc	r21, r13
 112:	04 f4       	brge	.+0      	; 0x114 <setPinsVal+0x114>
 114:	00 c0       	rjmp	.+0      	; 0x116 <setPinsVal+0x116>
 116:	cf 91       	pop	r28
 118:	df 91       	pop	r29
 11a:	1f 91       	pop	r17
 11c:	0f 91       	pop	r16
 11e:	ff 90       	pop	r15
 120:	ef 90       	pop	r14
 122:	df 90       	pop	r13
 124:	cf 90       	pop	r12
 126:	08 95       	ret

Disassembly of section .text.setPinsDir:

00000000 <setPinsDir>:
   0:	cf 92       	push	r12
   2:	df 92       	push	r13
   4:	ef 92       	push	r14
   6:	ff 92       	push	r15
   8:	0f 93       	push	r16
   a:	1f 93       	push	r17
   c:	df 93       	push	r29
   e:	cf 93       	push	r28
  10:	cd b7       	in	r28, 0x3d	; 61
  12:	de b7       	in	r29, 0x3e	; 62
  14:	8b 85       	ldd	r24, Y+11	; 0x0b
  16:	9c 85       	ldd	r25, Y+12	; 0x0c
  18:	ce 84       	ldd	r12, Y+14	; 0x0e
  1a:	df 84       	ldd	r13, Y+15	; 0x0f
  1c:	de 01       	movw	r26, r28
  1e:	50 96       	adiw	r26, 0x10	; 16
  20:	82 34       	cpi	r24, 0x42	; 66
  22:	01 f0       	breq	.+0      	; 0x24 <setPinsDir+0x24>
  24:	83 34       	cpi	r24, 0x43	; 67
  26:	00 f4       	brcc	.+0      	; 0x28 <setPinsDir+0x28>
  28:	81 34       	cpi	r24, 0x41	; 65
  2a:	01 f4       	brne	.+0      	; 0x2c <setPinsDir+0x2c>
  2c:	00 c0       	rjmp	.+0      	; 0x2e <setPinsDir+0x2e>
  2e:	83 34       	cpi	r24, 0x43	; 67
  30:	01 f0       	breq	.+0      	; 0x32 <setPinsDir+0x32>
  32:	84 34       	cpi	r24, 0x44	; 68
  34:	01 f4       	brne	.+0      	; 0x36 <setPinsDir+0x36>
  36:	00 c0       	rjmp	.+0      	; 0x38 <setPinsDir+0x38>
  38:	e1 e2       	ldi	r30, 0x21	; 33
  3a:	f0 e0       	ldi	r31, 0x00	; 0
  3c:	00 c0       	rjmp	.+0      	; 0x3e <setPinsDir+0x3e>
  3e:	e4 e2       	ldi	r30, 0x24	; 36
  40:	f0 e0       	ldi	r31, 0x00	; 0
  42:	00 c0       	rjmp	.+0      	; 0x44 <setPinsDir+0x44>
  44:	e7 e2       	ldi	r30, 0x27	; 39
  46:	f0 e0       	ldi	r31, 0x00	; 0
  48:	00 c0       	rjmp	.+0      	; 0x4a <setPinsDir+0x4a>
  4a:	ea e2       	ldi	r30, 0x2A	; 42
  4c:	f0 e0       	ldi	r31, 0x00	; 0
  4e:	40 e0       	ldi	r20, 0x00	; 0
  50:	50 e0       	ldi	r21, 0x00	; 0
  52:	29 2f       	mov	r18, r25
  54:	21 70       	andi	r18, 0x01	; 1
  56:	e2 2e       	mov	r14, r18
  58:	ee 0c       	add	r14, r14
  5a:	ee 0c       	add	r14, r14
  5c:	ee 0c       	add	r14, r14
  5e:	f2 2e       	mov	r15, r18
  60:	f2 94       	swap	r15
  62:	ff 0c       	add	r15, r15
  64:	30 ee       	ldi	r19, 0xE0	; 224
  66:	f3 22       	and	r15, r19
  68:	02 2f       	mov	r16, r18
  6a:	02 95       	swap	r16
  6c:	00 7f       	andi	r16, 0xF0	; 240
  6e:	12 2f       	mov	r17, r18
  70:	12 95       	swap	r17
  72:	11 0f       	add	r17, r17
  74:	11 0f       	add	r17, r17
  76:	10 7c       	andi	r17, 0xC0	; 192
  78:	79 2f       	mov	r23, r25
  7a:	77 95       	ror	r23
  7c:	77 27       	eor	r23, r23
  7e:	77 95       	ror	r23
  80:	62 2f       	mov	r22, r18
  82:	66 0f       	add	r22, r22
  84:	32 2f       	mov	r19, r18
  86:	33 0f       	add	r19, r19
  88:	33 0f       	add	r19, r19
  8a:	00 c0       	rjmp	.+0      	; 0x8c <setPinsDir+0x8c>
  8c:	8d 91       	ld	r24, X+
  8e:	9c 91       	ld	r25, X
  90:	11 97       	sbiw	r26, 0x01	; 1
  92:	83 30       	cpi	r24, 0x03	; 3
  94:	91 05       	cpc	r25, r1
  96:	01 f0       	breq	.+0      	; 0x98 <setPinsDir+0x98>
  98:	84 30       	cpi	r24, 0x04	; 4
  9a:	91 05       	cpc	r25, r1
  9c:	04 f4       	brge	.+0      	; 0x9e <setPinsDir+0x9e>
  9e:	81 30       	cpi	r24, 0x01	; 1
  a0:	91 05       	cpc	r25, r1
  a2:	01 f0       	breq	.+0      	; 0xa4 <setPinsDir+0xa4>
  a4:	82 30       	cpi	r24, 0x02	; 2
  a6:	91 05       	cpc	r25, r1
  a8:	04 f4       	brge	.+0      	; 0xaa <setPinsDir+0xaa>
  aa:	89 2b       	or	r24, r25
  ac:	01 f0       	breq	.+0      	; 0xae <setPinsDir+0xae>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <setPinsDir+0xb0>
  b0:	85 30       	cpi	r24, 0x05	; 5
  b2:	91 05       	cpc	r25, r1
  b4:	01 f0       	breq	.+0      	; 0xb6 <setPinsDir+0xb6>
  b6:	85 30       	cpi	r24, 0x05	; 5
  b8:	91 05       	cpc	r25, r1
  ba:	04 f0       	brlt	.+0      	; 0xbc <setPinsDir+0xbc>
  bc:	86 30       	cpi	r24, 0x06	; 6
  be:	91 05       	cpc	r25, r1
  c0:	01 f0       	breq	.+0      	; 0xc2 <setPinsDir+0xc2>
  c2:	07 97       	sbiw	r24, 0x07	; 7
  c4:	01 f4       	brne	.+0      	; 0xc6 <setPinsDir+0xc6>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <setPinsDir+0xc8>
  c8:	80 81       	ld	r24, Z
  ca:	8e 7f       	andi	r24, 0xFE	; 254
  cc:	82 2b       	or	r24, r18
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <setPinsDir+0xd0>
  d0:	80 81       	ld	r24, Z
  d2:	8d 7f       	andi	r24, 0xFD	; 253
  d4:	86 2b       	or	r24, r22
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <setPinsDir+0xd8>
  d8:	80 81       	ld	r24, Z
  da:	8b 7f       	andi	r24, 0xFB	; 251
  dc:	83 2b       	or	r24, r19
  de:	00 c0       	rjmp	.+0      	; 0xe0 <setPinsDir+0xe0>
  e0:	80 81       	ld	r24, Z
  e2:	87 7f       	andi	r24, 0xF7	; 247
  e4:	8e 29       	or	r24, r14
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <setPinsDir+0xe8>
  e8:	80 81       	ld	r24, Z
  ea:	8f 7e       	andi	r24, 0xEF	; 239
  ec:	80 2b       	or	r24, r16
  ee:	00 c0       	rjmp	.+0      	; 0xf0 <setPinsDir+0xf0>
  f0:	80 81       	ld	r24, Z
  f2:	8f 7d       	andi	r24, 0xDF	; 223
  f4:	8f 29       	or	r24, r15
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <setPinsDir+0xf8>
  f8:	80 81       	ld	r24, Z
  fa:	8f 7b       	andi	r24, 0xBF	; 191
  fc:	81 2b       	or	r24, r17
  fe:	00 c0       	rjmp	.+0      	; 0x100 <setPinsDir+0x100>
 100:	80 81       	ld	r24, Z
 102:	8f 77       	andi	r24, 0x7F	; 127
 104:	87 2b       	or	r24, r23
 106:	80 83       	st	Z, r24
 108:	12 96       	adiw	r26, 0x02	; 2
 10a:	4f 5f       	subi	r20, 0xFF	; 255
 10c:	5f 4f       	sbci	r21, 0xFF	; 255
 10e:	4c 15       	cp	r20, r12
 110:	5d 05       	cpc	r21, r13
 112:	04 f4       	brge	.+0      	; 0x114 <setPinsDir+0x114>
 114:	00 c0       	rjmp	.+0      	; 0x116 <setPinsDir+0x116>
 116:	cf 91       	pop	r28
 118:	df 91       	pop	r29
 11a:	1f 91       	pop	r17
 11c:	0f 91       	pop	r16
 11e:	ff 90       	pop	r15
 120:	ef 90       	pop	r14
 122:	df 90       	pop	r13
 124:	cf 90       	pop	r12
 126:	08 95       	ret

timer.o:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000000  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001f  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000053  2**0
                  ALLOC
  3 .text.setPrescale 0000004a  00000000  00000000  00000053  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  4 .text.setCompValue 0000002c  00000000  00000000  0000009d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  5 .text.initTimer 000000c4  00000000  00000000  000000c9  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  6 .text.setTimerPeriod 00000282  00000000  00000000  0000018d  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE

Disassembly of section .text.setPrescale:

00000000 <setPrescale>:
   0:	81 30       	cpi	r24, 0x01	; 1
   2:	91 05       	cpc	r25, r1
   4:	01 f0       	breq	.+0      	; 0x6 <setPrescale+0x6>
   6:	82 30       	cpi	r24, 0x02	; 2
   8:	91 05       	cpc	r25, r1
   a:	01 f0       	breq	.+0      	; 0xc <setPrescale+0xc>
   c:	89 2b       	or	r24, r25
   e:	01 f4       	brne	.+0      	; 0x10 <setPrescale+0x10>
  10:	85 b5       	in	r24, 0x25	; 37
  12:	88 7f       	andi	r24, 0xF8	; 248
  14:	85 bd       	out	0x25, r24	; 37
  16:	85 b5       	in	r24, 0x25	; 37
  18:	86 2b       	or	r24, r22
  1a:	85 bd       	out	0x25, r24	; 37
  1c:	08 95       	ret
  1e:	80 91 81 00 	lds	r24, 0x0081
  22:	88 7f       	andi	r24, 0xF8	; 248
  24:	80 93 81 00 	sts	0x0081, r24
  28:	80 91 81 00 	lds	r24, 0x0081
  2c:	86 2b       	or	r24, r22
  2e:	80 93 81 00 	sts	0x0081, r24
  32:	08 95       	ret
  34:	80 91 b1 00 	lds	r24, 0x00B1
  38:	88 7f       	andi	r24, 0xF8	; 248
  3a:	80 93 b1 00 	sts	0x00B1, r24
  3e:	80 91 b1 00 	lds	r24, 0x00B1
  42:	86 2b       	or	r24, r22
  44:	80 93 b1 00 	sts	0x00B1, r24
  48:	08 95       	ret

Disassembly of section .text.setCompValue:

00000000 <setCompValue>:
   0:	81 30       	cpi	r24, 0x01	; 1
   2:	01 f0       	breq	.+0      	; 0x4 <setCompValue+0x4>
   4:	81 30       	cpi	r24, 0x01	; 1
   6:	00 f0       	brcs	.+0      	; 0x8 <setCompValue+0x8>
   8:	82 30       	cpi	r24, 0x02	; 2
   a:	01 f4       	brne	.+0      	; 0xc <setCompValue+0xc>
   c:	00 c0       	rjmp	.+0      	; 0xe <setCompValue+0xe>
   e:	67 bd       	out	0x27, r22	; 39
  10:	08 95       	ret
  12:	70 93 89 00 	sts	0x0089, r23
  16:	60 93 88 00 	sts	0x0088, r22
  1a:	82 e0       	ldi	r24, 0x02	; 2
  1c:	80 93 6f 00 	sts	0x006F, r24
  20:	08 95       	ret
  22:	60 93 b3 00 	sts	0x00B3, r22
  26:	80 93 70 00 	sts	0x0070, r24
  2a:	08 95       	ret

Disassembly of section .text.initTimer:

00000000 <initTimer>:
   0:	81 30       	cpi	r24, 0x01	; 1
   2:	91 05       	cpc	r25, r1
   4:	01 f0       	breq	.+0      	; 0x6 <initTimer+0x6>
   6:	82 30       	cpi	r24, 0x02	; 2
   8:	91 05       	cpc	r25, r1
   a:	01 f0       	breq	.+0      	; 0xc <initTimer+0xc>
   c:	89 2b       	or	r24, r25
   e:	01 f0       	breq	.+0      	; 0x10 <initTimer+0x10>
  10:	00 c0       	rjmp	.+0      	; 0x12 <initTimer+0x12>
  12:	14 bc       	out	0x24, r1	; 36
  14:	82 e0       	ldi	r24, 0x02	; 2
  16:	85 bd       	out	0x25, r24	; 37
  18:	81 e0       	ldi	r24, 0x01	; 1
  1a:	80 93 6e 00 	sts	0x006E, r24
  1e:	08 95       	ret
  20:	80 91 81 00 	lds	r24, 0x0081
  24:	89 7f       	andi	r24, 0xF9	; 249
  26:	80 93 81 00 	sts	0x0081, r24
  2a:	80 91 81 00 	lds	r24, 0x0081
  2e:	81 60       	ori	r24, 0x01	; 1
  30:	80 93 81 00 	sts	0x0081, r24
  34:	61 15       	cp	r22, r1
  36:	71 05       	cpc	r23, r1
  38:	01 f0       	breq	.+0      	; 0x3a <initTimer+0x3a>
  3a:	62 30       	cpi	r22, 0x02	; 2
  3c:	71 05       	cpc	r23, r1
  3e:	01 f4       	brne	.+0      	; 0x40 <initTimer+0x40>
  40:	00 c0       	rjmp	.+0      	; 0x42 <initTimer+0x42>
  42:	80 91 80 00 	lds	r24, 0x0080
  46:	8c 7f       	andi	r24, 0xFC	; 252
  48:	00 c0       	rjmp	.+0      	; 0x4a <initTimer+0x4a>
  4a:	80 91 80 00 	lds	r24, 0x0080
  4e:	81 60       	ori	r24, 0x01	; 1
  50:	80 93 80 00 	sts	0x0080, r24
  54:	80 91 80 00 	lds	r24, 0x0080
  58:	82 60       	ori	r24, 0x02	; 2
  5a:	80 93 80 00 	sts	0x0080, r24
  5e:	80 91 81 00 	lds	r24, 0x0081
  62:	8b 7f       	andi	r24, 0xFB	; 251
  64:	80 93 81 00 	sts	0x0081, r24
  68:	81 e0       	ldi	r24, 0x01	; 1
  6a:	ba 01       	movw	r22, r20
  6c:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  70:	08 95       	ret
  72:	80 91 b1 00 	lds	r24, 0x00B1
  76:	89 7f       	andi	r24, 0xF9	; 249
  78:	80 93 b1 00 	sts	0x00B1, r24
  7c:	80 91 b1 00 	lds	r24, 0x00B1
  80:	81 60       	ori	r24, 0x01	; 1
  82:	80 93 b1 00 	sts	0x00B1, r24
  86:	61 15       	cp	r22, r1
  88:	71 05       	cpc	r23, r1
  8a:	01 f0       	breq	.+0      	; 0x8c <initTimer+0x8c>
  8c:	62 30       	cpi	r22, 0x02	; 2
  8e:	71 05       	cpc	r23, r1
  90:	01 f4       	brne	.+0      	; 0x92 <initTimer+0x92>
  92:	00 c0       	rjmp	.+0      	; 0x94 <initTimer+0x94>
  94:	80 91 b0 00 	lds	r24, 0x00B0
  98:	8c 7f       	andi	r24, 0xFC	; 252
  9a:	00 c0       	rjmp	.+0      	; 0x9c <initTimer+0x9c>
  9c:	80 91 b0 00 	lds	r24, 0x00B0
  a0:	8e 7f       	andi	r24, 0xFE	; 254
  a2:	80 93 b0 00 	sts	0x00B0, r24
  a6:	80 91 b0 00 	lds	r24, 0x00B0
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	80 93 b0 00 	sts	0x00B0, r24
  b0:	80 91 b1 00 	lds	r24, 0x00B1
  b4:	8b 7f       	andi	r24, 0xFB	; 251
  b6:	80 93 b1 00 	sts	0x00B1, r24
  ba:	82 e0       	ldi	r24, 0x02	; 2
  bc:	ba 01       	movw	r22, r20
  be:	0e 94 00 00 	call	0	; 0x0 <initTimer>
  c2:	08 95       	ret

Disassembly of section .text.setTimerPeriod:

00000000 <setTimerPeriod>:
   0:	af 92       	push	r10
   2:	bf 92       	push	r11
   4:	cf 92       	push	r12
   6:	df 92       	push	r13
   8:	ef 92       	push	r14
   a:	ff 92       	push	r15
   c:	0f 93       	push	r16
   e:	1f 93       	push	r17
  10:	cf 93       	push	r28
  12:	df 93       	push	r29
  14:	5c 01       	movw	r10, r24
  16:	7a 01       	movw	r14, r20
  18:	8b 01       	movw	r16, r22
  1a:	00 97       	sbiw	r24, 0x00	; 0
  1c:	01 f0       	breq	.+0      	; 0x1e <setTimerPeriod+0x1e>
  1e:	82 e0       	ldi	r24, 0x02	; 2
  20:	a8 16       	cp	r10, r24
  22:	b1 04       	cpc	r11, r1
  24:	01 f0       	breq	.+0      	; 0x26 <setTimerPeriod+0x26>
  26:	00 c0       	rjmp	.+0      	; 0x28 <setTimerPeriod+0x28>
  28:	c8 01       	movw	r24, r16
  2a:	b7 01       	movw	r22, r14
  2c:	2d ec       	ldi	r18, 0xCD	; 205
  2e:	3c ec       	ldi	r19, 0xCC	; 204
  30:	4c e0       	ldi	r20, 0x0C	; 12
  32:	52 e4       	ldi	r21, 0x42	; 66
  34:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  38:	88 23       	and	r24, r24
  3a:	04 f0       	brlt	.+0      	; 0x3c <setTimerPeriod+0x3c>
  3c:	c8 01       	movw	r24, r16
  3e:	b7 01       	movw	r22, r14
  40:	20 e0       	ldi	r18, 0x00	; 0
  42:	30 ea       	ldi	r19, 0xA0	; 160
  44:	4c e0       	ldi	r20, 0x0C	; 12
  46:	56 e4       	ldi	r21, 0x46	; 70
  48:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  4c:	18 16       	cp	r1, r24
  4e:	04 f0       	brlt	.+0      	; 0x50 <setTimerPeriod+0x50>
  50:	00 c0       	rjmp	.+0      	; 0x52 <setTimerPeriod+0x52>
  52:	c8 01       	movw	r24, r16
  54:	b7 01       	movw	r22, r14
  56:	20 e0       	ldi	r18, 0x00	; 0
  58:	30 ea       	ldi	r19, 0xA0	; 160
  5a:	4c e0       	ldi	r20, 0x0C	; 12
  5c:	53 e4       	ldi	r21, 0x43	; 67
  5e:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  62:	88 23       	and	r24, r24
  64:	04 f0       	brlt	.+0      	; 0x66 <setTimerPeriod+0x66>
  66:	c8 01       	movw	r24, r16
  68:	b7 01       	movw	r22, r14
  6a:	20 e0       	ldi	r18, 0x00	; 0
  6c:	30 ea       	ldi	r19, 0xA0	; 160
  6e:	4c e0       	ldi	r20, 0x0C	; 12
  70:	57 e4       	ldi	r21, 0x47	; 71
  72:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  76:	18 16       	cp	r1, r24
  78:	04 f0       	brlt	.+0      	; 0x7a <setTimerPeriod+0x7a>
  7a:	00 c0       	rjmp	.+0      	; 0x7c <setTimerPeriod+0x7c>
  7c:	c8 01       	movw	r24, r16
  7e:	b7 01       	movw	r22, r14
  80:	20 e0       	ldi	r18, 0x00	; 0
  82:	30 ea       	ldi	r19, 0xA0	; 160
  84:	4c e0       	ldi	r20, 0x0C	; 12
  86:	54 e4       	ldi	r21, 0x44	; 68
  88:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  8c:	88 23       	and	r24, r24
  8e:	04 f0       	brlt	.+0      	; 0x90 <setTimerPeriod+0x90>
  90:	c8 01       	movw	r24, r16
  92:	b7 01       	movw	r22, r14
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 ea       	ldi	r19, 0xA0	; 160
  98:	4c e0       	ldi	r20, 0x0C	; 12
  9a:	58 e4       	ldi	r21, 0x48	; 72
  9c:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  a0:	18 16       	cp	r1, r24
  a2:	04 f0       	brlt	.+0      	; 0xa4 <setTimerPeriod+0xa4>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <setTimerPeriod+0xa6>
  a6:	c8 01       	movw	r24, r16
  a8:	b7 01       	movw	r22, r14
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	30 ea       	ldi	r19, 0xA0	; 160
  ae:	4c e8       	ldi	r20, 0x8C	; 140
  b0:	55 e4       	ldi	r21, 0x45	; 69
  b2:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  b6:	88 23       	and	r24, r24
  b8:	04 f0       	brlt	.+0      	; 0xba <setTimerPeriod+0xba>
  ba:	c8 01       	movw	r24, r16
  bc:	b7 01       	movw	r22, r14
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 ea       	ldi	r19, 0xA0	; 160
  c2:	4c e8       	ldi	r20, 0x8C	; 140
  c4:	59 e4       	ldi	r21, 0x49	; 73
  c6:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  ca:	18 16       	cp	r1, r24
  cc:	04 f0       	brlt	.+0      	; 0xce <setTimerPeriod+0xce>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <setTimerPeriod+0xd0>
  d0:	c8 01       	movw	r24, r16
  d2:	b7 01       	movw	r22, r14
  d4:	20 e0       	ldi	r18, 0x00	; 0
  d6:	30 ea       	ldi	r19, 0xA0	; 160
  d8:	4c e0       	ldi	r20, 0x0C	; 12
  da:	57 e4       	ldi	r21, 0x47	; 71
  dc:	00 c0       	rjmp	.+0      	; 0xde <setTimerPeriod+0xde>
  de:	cb 01       	movw	r24, r22
  e0:	ba 01       	movw	r22, r20
  e2:	27 e3       	ldi	r18, 0x37	; 55
  e4:	39 e8       	ldi	r19, 0x89	; 137
  e6:	41 e8       	ldi	r20, 0x81	; 129
  e8:	5e e3       	ldi	r21, 0x3E	; 62
  ea:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
  ee:	88 23       	and	r24, r24
  f0:	04 f0       	brlt	.+0      	; 0xf2 <setTimerPeriod+0xf2>
  f2:	c8 01       	movw	r24, r16
  f4:	b7 01       	movw	r22, r14
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	30 ea       	ldi	r19, 0xA0	; 160
  fa:	4c e0       	ldi	r20, 0x0C	; 12
  fc:	56 e4       	ldi	r21, 0x46	; 70
  fe:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 102:	18 16       	cp	r1, r24
 104:	04 f0       	brlt	.+0      	; 0x106 <setTimerPeriod+0x106>
 106:	00 c0       	rjmp	.+0      	; 0x108 <setTimerPeriod+0x108>
 108:	c8 01       	movw	r24, r16
 10a:	b7 01       	movw	r22, r14
 10c:	2e ea       	ldi	r18, 0xAE	; 174
 10e:	37 e4       	ldi	r19, 0x47	; 71
 110:	41 e8       	ldi	r20, 0x81	; 129
 112:	5f e3       	ldi	r21, 0x3F	; 63
 114:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 118:	88 23       	and	r24, r24
 11a:	04 f0       	brlt	.+0      	; 0x11c <setTimerPeriod+0x11c>
 11c:	c8 01       	movw	r24, r16
 11e:	b7 01       	movw	r22, r14
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 ea       	ldi	r19, 0xA0	; 160
 124:	4c e0       	ldi	r20, 0x0C	; 12
 126:	57 e4       	ldi	r21, 0x47	; 71
 128:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 12c:	18 16       	cp	r1, r24
 12e:	04 f0       	brlt	.+0      	; 0x130 <setTimerPeriod+0x130>
 130:	00 c0       	rjmp	.+0      	; 0x132 <setTimerPeriod+0x132>
 132:	c8 01       	movw	r24, r16
 134:	b7 01       	movw	r22, r14
 136:	2e ea       	ldi	r18, 0xAE	; 174
 138:	37 e4       	ldi	r19, 0x47	; 71
 13a:	41 e8       	ldi	r20, 0x81	; 129
 13c:	50 e4       	ldi	r21, 0x40	; 64
 13e:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 142:	88 23       	and	r24, r24
 144:	04 f0       	brlt	.+0      	; 0x146 <setTimerPeriod+0x146>
 146:	c8 01       	movw	r24, r16
 148:	b7 01       	movw	r22, r14
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 ea       	ldi	r19, 0xA0	; 160
 14e:	4c e0       	ldi	r20, 0x0C	; 12
 150:	58 e4       	ldi	r21, 0x48	; 72
 152:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 156:	18 16       	cp	r1, r24
 158:	04 f4       	brge	.+0      	; 0x15a <setTimerPeriod+0x15a>
 15a:	c8 01       	movw	r24, r16
 15c:	b7 01       	movw	r22, r14
 15e:	2c e5       	ldi	r18, 0x5C	; 92
 160:	3f e8       	ldi	r19, 0x8F	; 143
 162:	41 e0       	ldi	r20, 0x01	; 1
 164:	52 e4       	ldi	r21, 0x42	; 66
 166:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 16a:	88 23       	and	r24, r24
 16c:	04 f0       	brlt	.+0      	; 0x16e <setTimerPeriod+0x16e>
 16e:	c8 01       	movw	r24, r16
 170:	b7 01       	movw	r22, r14
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	30 ea       	ldi	r19, 0xA0	; 160
 176:	4c e8       	ldi	r20, 0x8C	; 140
 178:	59 e4       	ldi	r21, 0x49	; 73
 17a:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 17e:	18 16       	cp	r1, r24
 180:	04 f4       	brge	.+0      	; 0x182 <setTimerPeriod+0x182>
 182:	c8 01       	movw	r24, r16
 184:	b7 01       	movw	r22, r14
 186:	2c e5       	ldi	r18, 0x5C	; 92
 188:	3f e8       	ldi	r19, 0x8F	; 143
 18a:	41 e8       	ldi	r20, 0x81	; 129
 18c:	53 e4       	ldi	r21, 0x43	; 67
 18e:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 192:	88 23       	and	r24, r24
 194:	04 f0       	brlt	.+0      	; 0x196 <setTimerPeriod+0x196>
 196:	c8 01       	movw	r24, r16
 198:	b7 01       	movw	r22, r14
 19a:	20 e0       	ldi	r18, 0x00	; 0
 19c:	30 ea       	ldi	r19, 0xA0	; 160
 19e:	4c e0       	ldi	r20, 0x0C	; 12
 1a0:	5b e4       	ldi	r21, 0x4B	; 75
 1a2:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 1a6:	18 16       	cp	r1, r24
 1a8:	04 f4       	brge	.+0      	; 0x1aa <setTimerPeriod+0x1aa>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <setTimerPeriod+0x1ac>
 1ac:	54 e0       	ldi	r21, 0x04	; 4
 1ae:	c5 2e       	mov	r12, r21
 1b0:	d1 2c       	mov	r13, r1
 1b2:	c0 e0       	ldi	r28, 0x00	; 0
 1b4:	d1 e0       	ldi	r29, 0x01	; 1
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <setTimerPeriod+0x1b8>
 1b8:	45 e0       	ldi	r20, 0x05	; 5
 1ba:	c4 2e       	mov	r12, r20
 1bc:	d1 2c       	mov	r13, r1
 1be:	c0 e0       	ldi	r28, 0x00	; 0
 1c0:	d4 e0       	ldi	r29, 0x04	; 4
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <setTimerPeriod+0x1c4>
 1c4:	33 e0       	ldi	r19, 0x03	; 3
 1c6:	c3 2e       	mov	r12, r19
 1c8:	d1 2c       	mov	r13, r1
 1ca:	c0 e4       	ldi	r28, 0x40	; 64
 1cc:	d0 e0       	ldi	r29, 0x00	; 0
 1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <setTimerPeriod+0x1d0>
 1d0:	22 e0       	ldi	r18, 0x02	; 2
 1d2:	c2 2e       	mov	r12, r18
 1d4:	d1 2c       	mov	r13, r1
 1d6:	c8 e0       	ldi	r28, 0x08	; 8
 1d8:	d0 e0       	ldi	r29, 0x00	; 0
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <setTimerPeriod+0x1dc>
 1dc:	cc 24       	eor	r12, r12
 1de:	dd 24       	eor	r13, r13
 1e0:	c0 e0       	ldi	r28, 0x00	; 0
 1e2:	d0 e0       	ldi	r29, 0x00	; 0
 1e4:	00 c0       	rjmp	.+0      	; 0x1e6 <setTimerPeriod+0x1e6>
 1e6:	91 e0       	ldi	r25, 0x01	; 1
 1e8:	c9 2e       	mov	r12, r25
 1ea:	d1 2c       	mov	r13, r1
 1ec:	c1 e0       	ldi	r28, 0x01	; 1
 1ee:	d0 e0       	ldi	r29, 0x00	; 0
 1f0:	00 d0       	rcall	.+0      	; 0x1f2 <setTimerPeriod+0x1f2>
 1f2:	00 d0       	rcall	.+0      	; 0x1f4 <setTimerPeriod+0x1f4>
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	ed b7       	in	r30, 0x3d	; 61
 1fa:	fe b7       	in	r31, 0x3e	; 62
 1fc:	92 83       	std	Z+2, r25	; 0x02
 1fe:	81 83       	std	Z+1, r24	; 0x01
 200:	d4 83       	std	Z+4, r29	; 0x04
 202:	c3 83       	std	Z+3, r28	; 0x03
 204:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 208:	cc 0f       	add	r28, r28
 20a:	dd 1f       	adc	r29, r29
 20c:	be 01       	movw	r22, r28
 20e:	88 27       	eor	r24, r24
 210:	77 fd       	sbrc	r23, 7
 212:	80 95       	com	r24
 214:	98 2f       	mov	r25, r24
 216:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 21a:	a8 01       	movw	r20, r16
 21c:	97 01       	movw	r18, r14
 21e:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 222:	9b 01       	movw	r18, r22
 224:	ac 01       	movw	r20, r24
 226:	60 e0       	ldi	r22, 0x00	; 0
 228:	74 e2       	ldi	r23, 0x24	; 36
 22a:	84 ef       	ldi	r24, 0xF4	; 244
 22c:	9a e4       	ldi	r25, 0x4A	; 74
 22e:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 232:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 236:	7b 01       	movw	r14, r22
 238:	8c 01       	movw	r16, r24
 23a:	08 94       	sec
 23c:	e1 08       	sbc	r14, r1
 23e:	f1 08       	sbc	r15, r1
 240:	80 e0       	ldi	r24, 0x00	; 0
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	ed b7       	in	r30, 0x3d	; 61
 246:	fe b7       	in	r31, 0x3e	; 62
 248:	92 83       	std	Z+2, r25	; 0x02
 24a:	81 83       	std	Z+1, r24	; 0x01
 24c:	f4 82       	std	Z+4, r15	; 0x04
 24e:	e3 82       	std	Z+3, r14	; 0x03
 250:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	0f 90       	pop	r0
 25c:	c5 01       	movw	r24, r10
 25e:	b6 01       	movw	r22, r12
 260:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 264:	8a 2d       	mov	r24, r10
 266:	b7 01       	movw	r22, r14
 268:	0e 94 00 00 	call	0	; 0x0 <setTimerPeriod>
 26c:	df 91       	pop	r29
 26e:	cf 91       	pop	r28
 270:	1f 91       	pop	r17
 272:	0f 91       	pop	r16
 274:	ff 90       	pop	r15
 276:	ef 90       	pop	r14
 278:	df 90       	pop	r13
 27a:	cf 90       	pop	r12
 27c:	bf 90       	pop	r11
 27e:	af 90       	pop	r10
 280:	08 95       	ret
